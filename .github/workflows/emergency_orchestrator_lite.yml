name: Emergency Orchestrator LITE (direct apply)
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create minimal self-healing files (here-docs only)
        run: |
          set -e
          mkdir -p scripts .github/workflows self_healing_out

          cat > scripts/make_rebuild_bundle.sh <<'SH'
#!/usr/bin/env bash
set -e
SHA="${1:-$(git rev-parse HEAD)}"
PREV="${2:-$(git rev-parse HEAD~1 || echo HEAD)}"
OUTDIR="${3:-rebuild_kit}"
REPO_NAME="${4:-$(basename "$(git rev-parse --show-toplevel)")}"
DATE_ISO="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
mkdir -p "$OUTDIR"
{
  echo "repo: $REPO_NAME"
  echo "date_utc: $DATE_ISO"
  echo "commit_sha: $SHA"
  echo "prev_sha: $PREV"
  echo "branch: ${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
} > "$OUTDIR/meta.txt"
git diff --name-status "$PREV" "$SHA" > "$OUTDIR/changed_files.txt" || true
git diff -U3 "$PREV" "$SHA" > "$OUTDIR/changes.patch" || true
mkdir -p "$OUTDIR/files"
awk '{ if ($1=="A" || $1=="M" || $1=="R100" || $1=="R") print $NF }' "$OUTDIR/changed_files.txt" | while read -r f; do
  [ -f "$f" ] && mkdir -p "$OUTDIR/files/$(dirname "$f")" && cp -a "$f" "$OUTDIR/files/$f"
done
ZIP="rebuild_kit_${REPO_NAME}_$(git rev-parse --short "$SHA").zip"
( cd "$OUTDIR/.." && zip -r "$ZIP" "$(basename "$OUTDIR")" >/dev/null )
echo "$ZIP"
SH
          chmod +x scripts/make_rebuild_bundle.sh

          cat > scripts/collect_self_healing.py <<'PY'
#!/usr/bin/env python3
import json, os
from pathlib import Path
ROOT = Path(__file__).resolve().parents[1]
OUT = ROOT / "self_healing_out"; OUT.mkdir(parents=True, exist_ok=True)
def ls(pats):
  out=[]; 
  for pat in pats:
    out += [str(p) for p in ROOT.glob(pat) if p.is_file()]
  return sorted(out)
manifest = {
  "repo": os.getenv("GITHUB_REPOSITORY", ROOT.name),
  "branch": os.getenv("GITHUB_REF_NAME", ""),
  "generated_at": __import__("datetime").datetime.utcnow().isoformat()+"Z",
  "measures": {
    "workflows": ls([".github/workflows/*.yml",".github/workflows/*.yaml"]),
    "scripts": ls(["scripts/*.sh","scripts/*.py"]),
    "config": ls(["render.yaml","api/requirements.txt","package.json","pnpm-lock.yaml","yarn.lock","package-lock.json"]),
    "ui": ls(["public/diag.html"]),
    "api": ls(["api/app/main.py"]),
  }
}
(OUT/"SELF_HEALING_MANIFEST.json").write_text(json.dumps(manifest, indent=2), encoding="utf-8")
(OUT/"SELF_HEALING_MANIFEST.md").write_text("# Minimal Manifest\n\n```\n"+json.dumps(manifest, indent=2)+"\n```", encoding="utf-8")
(OUT/"GAPS.json").write_text(json.dumps({"note":"minimal collector; full gaps later"}, indent=2), encoding="utf-8")
(OUT/"REMEDIATIONS.md").write_text("", encoding="utf-8")
print("OK")
PY
          chmod +x scripts/collect_self_healing.py

          cat > .github/workflows/rebuild-kit.yml <<'YML'
name: Rebuild Kit (Zero-Secret)
on:
  workflow_dispatch:
  push:
    branches: [ main ]
jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Build Rebuild Kit
        run: |
          bash scripts/make_rebuild_bundle.sh "$(git rev-parse HEAD)" "$(git rev-parse HEAD~1 || echo HEAD)" "rebuild_kit" "$(basename "$GITHUB_REPOSITORY")" > zipname.txt
          cat zipname.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rebuild_kit
          path: ./*.zip
          if-no-files-found: error
YML

          cat > .github/workflows/self-healing-scan.yml <<'YML'
name: Self-Healing Scan (Minimal)
on:
  workflow_dispatch:
jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Run minimal collector
        run: python3 scripts/collect_self_healing.py
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: self_healing_manifest
          path: |
            self_healing_out/SELF_HEALING_MANIFEST.json
            self_healing_out/SELF_HEALING_MANIFEST.md
            self_healing_out/GAPS.json
            self_healing_out/REMEDIATIONS.md
          if-no-files-found: error
YML

      - name: Commit & push
        run: |
          git config user.name "automation-bot"
          git config user.email "bot@stegverse.local"
          git add -A
          git commit -m "Seed minimal self-healing pack" || echo "No changes"
          git push origin HEAD:main
