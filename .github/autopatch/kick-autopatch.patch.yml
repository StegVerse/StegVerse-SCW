version: 1
actions:
  - write_files:
      # 1) Actions workflow to "kick" the autopatch runner by committing a tiny trigger file
      - path: ".github/workflows/kick-autopatch.yml"
        mode: "100644"
        contents: |
          name: kick-autopatch
          on:
            workflow_dispatch:
              inputs:
                message:
                  description: "Optional note in trigger file"
                  required: false
                  default: "manual kick"
                branch:
                  description: "Branch to push (blank = current or main)"
                  required: false
                  default: ""
          permissions:
            contents: write
          jobs:
            kick:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v4
                  with:
                    persist-credentials: true
                    fetch-depth: 0
                - name: Create trigger file and push
                  env:
                    INPUT_MESSAGE: ${{ inputs.message }}
                    INPUT_BRANCH:  ${{ inputs.branch }}
                  shell: bash
                  run: |
                    set -euo pipefail
                    BRANCH="${INPUT_BRANCH}"
                    if [ -z "$BRANCH" ]; then
                      BRANCH="${GITHUB_REF_NAME:-main}"
                    fi
                    mkdir -p .github/trigger/autopatch
                    TS="$(date -u +'%Y%m%dT%H%M%SZ')"
                    FILE=".github/trigger/autopatch/ping-${TS}.txt"
                    {
                      echo "autopatch kick at ${TS}"
                      echo "by=${GITHUB_ACTOR}"
                      echo "msg=${INPUT_MESSAGE}"
                      echo "run_id=${GITHUB_RUN_ID}"
                    } > "${FILE}"
                    git config user.name  "StegVerse Bot"
                    git config user.email "bot@stegverse.org"
                    git add "${FILE}"
                    git commit -m "chore(autopatch): kick trigger ${TS}"
                    git push origin "HEAD:${BRANCH}"
                - name: Summary
                  run: |
                    {
                      echo "### Kick AutoPatch"
                      echo
                      echo "- Created a trigger file under \`.github/trigger/autopatch/\`"
                      echo "- This push path fires **autopatch-apply.yml**"
                    } >> "$GITHUB_STEP_SUMMARY"

      # 2) Local helper script (optional)
      - path: "scripts/kick_autopatch.sh"
        mode: "100755"
        contents: |
          #!/usr/bin/env bash
          set -euo pipefail
          MSG="${1:-manual kick}"
          mkdir -p .github/trigger/autopatch
          TS="$(date -u +'%Y%m%dT%H%M%SZ')"
          FILE=".github/trigger/autopatch/ping-${TS}.txt"
          {
            echo "autopatch kick at ${TS}"
            echo "by=${USER:-local}"
            echo "msg=${MSG}"
          } > "${FILE}"
          git add "${FILE}"
          echo "Created ${FILE}. Commit & push to fire autopatch-apply:"
          echo "  git commit -m 'chore(autopatch): local kick ${TS}' && git push"

      # 3) Quick docs
      - path: ".github/docs/AUTOPATCH.md"
        mode: "100644"
        contents: |
          # üîÅ AutoPatch ‚Äî Quick Kick
          If **autopatch-apply** needs a nudge:
          ## A) Actions
          - Actions ‚Üí **kick-autopatch** ‚Üí Run workflow (leave Branch blank to use current ref or `main`).
          ## B) Local
          ```bash
          bash scripts/kick_autopatch.sh "manual kick"
          git commit -m "chore(autopatch): local kick"
          git push
          ```
          This creates a tiny file under `.github/trigger/autopatch/‚Ä¶`, which **autopatch-apply.yml** listens to via `push.paths`.

  - commit:
      message: "chore(actions): add Kick AutoPatch workflow + helper (autopatch)"
