name: dispatch-workflow

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Workflow file to dispatch (e.g., .github/workflows/autopatch-apply.yml)"
        required: true
      ref:
        description: "Git ref to run on (branch or tag)"
        required: false
        default: "main"
      inputs_json:
        description: "JSON inputs for the target workflow_dispatch (e.g., {\"dry_run\":\"false\"})"
        required: false
        default: "{}"

permissions:
  actions: write
  contents: read

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs_json
        env:
          INPUTS_JSON: ${{ github.event.inputs.inputs_json }}
        run: |
          set -euo pipefail
          python - <<'PY'
import json, os, sys
s = os.environ.get("INPUTS_JSON","") or "{}"
try:
    j = json.loads(s)
    assert isinstance(j, dict)
except Exception as e:
    print(f"::error title=Bad inputs_json::Must be a JSON object. Error: {e}")
    sys.exit(1)
print("OK")
PY

      - name: Dispatch target workflow via API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          REF: ${{ github.event.inputs.ref }}
          WF_FILE: ${{ github.event.inputs.workflow_file }}
          WF_INPUTS: ${{ github.event.inputs.inputs_json }}
        run: |
          set -euo pipefail
          if [ -z "${GH_TOKEN:-}" ]; then
            echo "::error title=Missing token::GITHUB_TOKEN not available."
            exit 1
          fi
          # URL-encode the workflow file path
          ENC=$(python - <<'PY'
import os, urllib.parse
print(urllib.parse.quote(os.environ["WF_FILE"]))
PY
)
          API="https://api.github.com/repos/${REPO}/actions/workflows/${ENC}/dispatches"

          echo "Dispatching ${WF_FILE} on ref=${REF} with inputs=${WF_INPUTS}"
          CODE=$(curl -sS -o /dev/null -w "%{http_code}" -X POST "$API" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -d "{\"ref\":\"${REF}\",\"inputs\":${WF_INPUTS}}")

          if [ "$CODE" != "204" ]; then
            echo "::error title=Dispatch failed::HTTP ${CODE} (see logs)."
            exit 1
          fi
          echo "âœ… Dispatched ${WF_FILE} on ${REF}"
