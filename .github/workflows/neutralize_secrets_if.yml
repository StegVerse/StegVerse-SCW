name: Neutralize Secrets-if (auto-patch + PR)
on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  neutralize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 2 }

      - name: Patch workflows that use `if: ${{ secrets... }}`
        shell: bash
        run: |
          set -euo pipefail
          BR="neutralize/secrets-if-${GITHUB_RUN_ID}"
          REPORT="neutralize_report.md"
          echo "# Neutralize Secrets-if Report" > "$REPORT"
          echo "" >> "$REPORT"

          changed=0

          patch_file () {
            local wf="$1"
            # Use awk to:
            #  - find lines like: if: ${{ secrets.X != '' && ... }}
            #  - comment that original line
            #  - insert a safe guard: if: ${{ false }}
            # This avoids GitHub's "Unrecognized named-value: 'secrets'" parser error.
            awk '
              {
                if ($0 ~ /^[[:space:]]*if:[[:space:]]*\$\{\{[[:space:]]*secrets\.[^}]+\}\}[[:space:]]*$/) {
                  indent = match($0, /^[[:space:]]*/)
                  spaces = substr($0, 1, RLENGTH)
                  print spaces "# TODO(auto): original secrets-guard disabled to avoid parser error"
                  print spaces "# " $0
                  print spaces "if: ${{ false }}"
                  next
                }
              }
              { print }
            ' "$wf" > "$wf.tmp" && mv "$wf.tmp" "$wf"
          }

          # Walk all workflows
          for wf in .github/workflows/*.yml .github/workflows/*.yaml; do
            [ -f "$wf" ] || continue
            if grep -nE '^[[:space:]]*if:[[:space:]]*\$\{\{[[:space:]]*secrets\.[^}]+' "$wf" >/dev/null 2>&1; then
              cp "$wf" "$wf.bak"
              patch_file "$wf"
              if ! diff -q "$wf.bak" "$wf" >/dev/null 2>&1; then
                echo "- Patched: $wf" >> "$REPORT"
                rm -f "$wf.bak"
                git add "$wf"
                changed=$((changed+1))
              else
                rm -f "$wf.bak"
              fi
            fi
          done

          # Also fix *inline* compound expressions like: if: ${{ secrets.X != '' && secrets.Y != '' }}
          # (the awk above already catches them; this is a belt-and-suspenders fallback)

          echo "" >> "$REPORT"
          if [ $changed -gt 0 ]; then
            echo "Patched $changed workflow(s)." >> "$REPORT"
            echo "::set-output name=changed::true"
          else
            echo "No secret-gated if blocks found." >> "$REPORT"
            echo "::set-output name=changed::false"
          fi

          # Create branch only if changes exist
          if [ $changed -gt 0 ]; then
            git config user.name "workflow-bot"
            git config user.email "bot@stegverse.local"
            git checkout -b "$BR"
            git commit -m "Neutralize secrets-based if conditions to avoid parser failures"
            git push origin "$BR"
          fi

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: neutralize_report
          path: neutralize_report.md

      - name: Open PR (if changes)
        if: steps.neutralize.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          set -euo pipefail
          BR="neutralize/secrets-if-${GITHUB_RUN_ID}"
          TITLE="Neutralize secrets-based if conditions"
          BODY="$(cat neutralize_report.md)"
          DATA=$(jq -n --arg t "$TITLE" --arg h "$BR" --arg b "main" --arg d "$BODY" \
                    '{title:$t, head:$h, base:$b, body:$d, maintainer_can_modify:true}')
          curl -sS -X POST \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -d "$DATA" \
            "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pulls" >/dev/null
