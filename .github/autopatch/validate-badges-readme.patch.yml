version: 1
actions:
  - write_files:
      - path: ".github/workflows/validate-badges-readme.yml"
        mode: "100644"
        contents: |
          name: Validate & Repair Badges + Docs

          on:
            workflow_dispatch: {}
            schedule:
              - cron: "0 9 * * 1"  # Mondays 09:00 UTC

          permissions:
            contents: write

          jobs:
            validate:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v4

                - name: Setup Python
                  uses: actions/setup-python@v5
                  with:
                    python-version: "3.11"

                - name: Validate & repair README + .github/docs
                  id: validate
                  run: |
                    set -euo pipefail
                    python - <<'PY'
                    import pathlib, re, sys, datetime

                    ROOT = pathlib.Path(".")
                    README = ROOT/"README.md"
                    DOCS = ROOT/".github/docs"
                    BADGES = DOCS/"badges"
                    LEGEND = BADGES/"legend.svg"
                    WF_STATUS = DOCS/"WORKFLOWS_STATUS.md"
                    DOCS_README = DOCS/"README.md"

                    now = datetime.datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")

                    # --- helpers ---
                    def ensure_dir(p: pathlib.Path):
                      p.mkdir(parents=True, exist_ok=True)

                    def append_if_missing(text: str, marker: str, block: str) -> str:
                      if marker in text:
                        return text
                      return text.rstrip()+"\n\n"+block.strip()+"\n"

                    changed = False

                    # --- README checks ---
                    if not README.exists():
                      print("::error::README.md missing"); sys.exit(1)
                    txt = README.read_text(encoding="utf-8")

                    # badges block markers
                    start = "<!-- workflows:badges:start -->"
                    end   = "<!-- workflows:badges:end -->"
                    if start not in txt or end not in txt:
                      badges_block = f"""{start}
<p align="left"><img alt="Workflows Legend" src=".github/docs/badges/legend.svg" width="380" /></p>
{end}"""
                      txt = append_if_missing(txt, start, badges_block)
                      changed = True

                    # topic footer
                    if "<!-- topic:badges -->" not in txt:
                      txt = txt.rstrip() + "\n\n<!-- topic:badges -->\n"
                      changed = True

                    # link to workflows status doc
                    link_line = "- See **[Workflows Status](.github/docs/WORKFLOWS_STATUS.md)** for latest checks."
                    if "Workflows Status" not in txt:
                      # add under a “Workflows” or “Self-Healing / Autonomy” section if found; else append
                      inserted = False
                      for hdr in ["## Workflows", "## Self-Healing", "## Self-Healing / Autonomy"]:
                        if hdr in txt:
                          txt = txt.replace(hdr, hdr + "\n\n" + link_line)
                          inserted = True
                          changed = True
                          break
                      if not inserted:
                        txt = txt.rstrip() + "\n\n" + link_line + "\n"
                        changed = True

                    if changed:
                      README.write_text(txt, encoding="utf-8")
                      print("README updated.")

                    # --- .github/docs scaffold ---
                    ensure_dir(DOCS)
                    ensure_dir(BADGES)

                    # legend.svg (simple, dark-mode friendly)
                    if not LEGEND.exists():
                      LEGEND.write_text("""<svg xmlns="http://www.w3.org/2000/svg" width="540" height="80">
                        <style>
                          .t{font:14px sans-serif;fill:#e6edf3}
                          .b{rx:6;ry:6}
                          .ok{fill:#238636}.warn{fill:#9e6a03}.skip{fill:#6e7781}.err{fill:#d1242f}.info{fill:#0969da}
                        </style>
                        <rect width="540" height="80" fill="#0d1117"/>
                        <rect x="12" y="16" width="18" height="18" class="b ok"/><text x="36" y="30" class="t">OK</text>
                        <rect x="92" y="16" width="18" height="18" class="b warn"/><text x="116" y="30" class="t">Warn</text>
                        <rect x="186" y="16" width="18" height="18" class="b skip"/><text x="210" y="30" class="t">Noop/Skip</text>
                        <rect x="306" y="16" width="18" height="18" class="b err"/><text x="330" y="30" class="t">Error</text>
                        <rect x="406" y="16" width="18" height="18" class="b info"/><text x="430" y="30" class="t">Info</text>
                        <text x="12" y="60" class="t">Legend · updated automatically</text>
                      </svg>""", encoding="utf-8")
                      print("legend.svg created.")

                    # docs index
                    if not DOCS_README.exists():
                      DOCS_README.write_text(f"""# Repo Docs

- [Workflows Status](WORKFLOWS_STATUS.md)
- Badges legend: `badges/legend.svg`

_Last updated: {now}_
""", encoding="utf-8")
                      print("docs/README.md created.")

                    # workflows status placeholder
                    if not WF_STATUS.exists():
                      WF_STATUS.write_text(f"""# Workflows Status

This page is updated by CI runs (AutoDocs/Status collectors).

| Timestamp (UTC) | Source | Summary |
|---|---|---|
| {now} | validate-badges-readme | Initialized page |

""", encoding="utf-8")
                      print("WORKFLOWS_STATUS.md created.")
                    PY

                - name: Commit & push if changes
                  run: |
                    set -euo pipefail
                    git config user.name "StegVerse Bot"
                    git config user.email "bot@stegverse.org"
                    git add README.md .github/docs || true
                    if ! git diff --cached --quiet; then
                      git commit -m "docs(autodocs): ensure README badges + .github/docs scaffold present"
                      git push origin HEAD:main
                    else
                      echo "No changes to commit."
  - commit:
      message: "chore(docs): add Validate & Repair Badges + Docs workflow"
