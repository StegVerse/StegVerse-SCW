name: AutoPatch — add RepoTree + Supercheck Tree step
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - ".github/trigger/autopatch/**"

permissions:
  contents: write
  pull-requests: write

jobs:
  autopatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      # ---------- Patch A: create .github/workflows/repo-tree.yml ----------
      - name: Add Repo Tree workflow (idempotent)
        run: |
          mkdir -p .github/workflows
          cat > .github/workflows/repo-tree.yml <<'YML'
name: Repo Tree (on demand)

on:
  workflow_dispatch:

jobs:
  tree:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate file tree
        run: |
          sudo apt-get update -y && sudo apt-get install -y tree
          mkdir -p self_healing_out
          {
            echo "# Repository Structure"
            echo ""
            echo '```'
            tree -I 'node_modules|.git|__pycache__|venv|dist|build' -L 4 --charset ascii
            echo '```'
            echo ""
            echo "Last updated: $(date '+%Y-%m-%d %H:%M:%S')"
          } > self_healing_out/STRUCTURE.md
      - name: Upload structure artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo_structure
          path: self_healing_out/STRUCTURE.md
      - name: Add to Actions summary
        run: |
          echo "## Repository Structure" >> $GITHUB_STEP_SUMMARY
          cat self_healing_out/STRUCTURE.md >> $GITHUB_STEP_SUMMARY
YML

      # ---------- Patch B: inject "Generate repo tree" step into Supercheck ----------
      - name: Inject "Generate repo tree" step into Supercheck (before Assemble step)
        shell: bash
        run: |
          set -euo pipefail
          SC_FILE=""
          # try common names you’ve been using
          for f in \
            ".github/workflows/one_button_supercheck.yml" \
            ".github/workflows/one-button-supercheck.yml" \
            ".github/workflows/supercheck.yml" \
            ".github/workflows/One-Button Supercheck.yml" \
            ".github/workflows/one-button-supercheck.yaml" \
            ".github/workflows/one_button_supercheck.yaml"
          do
            if [ -f "$f" ]; then SC_FILE="$f"; break; fi
          done

          if [ -z "$SC_FILE" ]; then
            echo "No Supercheck file found; skipping tree step injection."
            exit 0
          fi

          # If the step already exists, skip
          if grep -q 'name: Generate repo tree' "$SC_FILE"; then
            echo "Tree step already present in $SC_FILE; nothing to do."
            exit 0
          fi

          TMP="${SC_FILE}.tmp"

          # Insert the step immediately BEFORE "Assemble Supercheck Report"
          awk '
            BEGIN { inserted=0 }
            /- name: Assemble Supercheck Report/ && inserted==0 {
              print "      - name: Generate repo tree"
              print "        run: |"
              print "          sudo apt-get update -y && sudo apt-get install -y tree"
              print "          mkdir -p self_healing_out"
              print "          tree -I '"'"'node_modules|.git|__pycache__|venv|dist|build'"'"' -L 4 --charset ascii \\"
              print "            > self_healing_out/TREE.md"
              print ""
              print "      # (previously existing step follows)"
              inserted=1
            }
            { print $0 }
            END {
              if (inserted==0) {
                # If no Assemble step found, just append at end of job steps
                print ""
                print "      - name: Generate repo tree"
                print "        run: |"
                print "          sudo apt-get update -y && sudo apt-get install -y tree"
                print "          mkdir -p self_healing_out"
                print "          tree -I '"'"'node_modules|.git|__pycache__|venv|dist|build'"'"' -L 4 --charset ascii \\"
                print "            > self_healing_out/TREE.md"
              }
            }
          ' "$SC_FILE" > "$TMP"

          mv "$TMP" "$SC_FILE"

      - name: Commit changes (if any)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          git config user.name  "autopatch-bot"
          git config user.email "bot@stegverse.local"
          git add .github/workflows/repo-tree.yml || true
          git add .github/workflows/*.yml || true
          if git diff --cached --quiet; then
            echo "No autopatch changes to commit."
          else
            git commit -m "autopatch: add Repo Tree workflow + inject tree step into Supercheck"
            git push origin HEAD:main || true
          fi

      - name: Summary
        run: |
          echo "### Autopatch complete" >> $GITHUB_STEP_SUMMARY
          echo "- Added/updated: \`.github/workflows/repo-tree.yml\`" >> $GITHUB_STEP_SUMMARY
          echo "- Ensured Supercheck includes a 'Generate repo tree' step" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "You can now run **Repo Tree (on demand)** from the Actions tab, or just run Supercheck to include TREE.md in its bundle." >> $GITHUB_STEP_SUMMARY
