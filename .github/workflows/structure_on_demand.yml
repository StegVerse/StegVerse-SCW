name: Structure On Demand (Repo File Tree)

on:
  workflow_dispatch:
    inputs:
      depth:
        description: "Directory depth (tree -L)"
        required: false
        default: "3"
      ignore:
        description: "Ignore patterns (| separated). Default: node_modules|.git|__pycache__|venv|dist|build"
        required: false
        default: "node_modules|.git|__pycache__|venv|dist|build"
  push:
    branches: [ "main" ]
    paths:
      - ".github/trigger/structure/**"

permissions:
  contents: read

jobs:
  structure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          clean: true

      - name: Ensure tools
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y tree || true
          python3 -V || true
          mkdir -p self_healing_out

      - name: Seed generator script (bash + fallback) if missing
        run: |
          set -e
          mkdir -p scripts
          if [ ! -f scripts/generate_tree.sh ]; then
            cat > scripts/generate_tree.sh <<'SH'
#!/usr/bin/env bash
set -euo pipefail
DEPTH="${1:-3}"
IGNORE="${2:-node_modules|.git|__pycache__|venv|dist|build}"

# Build -I pattern for tree: pattern1|pattern2
TREE_IGN="-I ${IGNORE}"

# Markdown header
echo "# Repository Structure"
echo
echo '```'

if command -v tree >/dev/null 2>&1; then
  # Use tree if available
  tree -I "${IGNORE}" -L "${DEPTH}" --charset ascii || true
else
  # Fallback: find + awk indentation (not as pretty, but works)
  # Create a simple “depth prefix” listing up to DEPTH
  find . -type d -maxdepth "${DEPTH}" \
    | grep -Ev "/(${IGNORE//|/|})($|/)" \
    | sed 's|^\./||' \
    | awk -F'/' '{
        indent = length($0)-length(gensub("[^/]","","g",$0))
        prefix = ""
        for(i=0;i<indent;i++){prefix=prefix "  "}
        print prefix $NF
      }'
  echo
  echo "(Fallback renderer used — install 'tree' for nicer output.)"
fi

echo '```'
echo
echo "Last updated: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
SH
            chmod +x scripts/generate_tree.sh
          fi

      - name: Parse inputs
        id: args
        run: |
          # Inputs via workflow_dispatch
          DEPTH="${{ github.event.inputs.depth }}"
          IGNORE="${{ github.event.inputs.ignore }}"

          # If triggered by push with a trigger file, allow simple inline overrides:
          #   .github/trigger/structure/run-1.txt with lines like:
          #   depth=4
          #   ignore=node_modules|.git|cache
          if [ "${{ github.event_name }}" = "push" ]; then
            TRIG_FILE="$(git diff --name-only HEAD~1..HEAD | grep '^\.github/trigger/structure/' || true)"
            if [ -n "$TRIG_FILE" ] && [ -f "$TRIG_FILE" ]; then
              while IFS='=' read -r k v; do
                [ -z "$k" ] && continue
                case "$k" in
                  depth) DEPTH="$v" ;;
                  ignore) IGNORE="$v" ;;
                esac
              done < "$TRIG_FILE"
            fi
          fi

          echo "depth=${DEPTH:-3}"   >> $GITHUB_OUTPUT
          echo "ignore=${IGNORE:-node_modules|.git|__pycache__|venv|dist|build}" >> $GITHUB_OUTPUT

      - name: Generate STRUCTURE.md (no commit; artifact + summary only)
        run: |
          ./scripts/generate_tree.sh "${{ steps.args.outputs.depth }}" "${{ steps.args.outputs.ignore }}" > STRUCTURE.md
          head -n 40 STRUCTURE.md > STRUCTURE_HEAD.md || true

      - name: Add to Actions Summary
        run: |
          {
            echo "### Repo File Tree (top)"
            echo
            echo '```markdown'
            cat STRUCTURE_HEAD.md
            echo '```'
            echo
            echo "_Full file is attached as an artifact: **structure_bundle**_"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: structure_bundle
          path: |
            STRUCTURE.md
            scripts/generate_tree.sh
          if-no-files-found: error
