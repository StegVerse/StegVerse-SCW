name: Universal Fix-It (YAML auto-corrector)

on:
  workflow_dispatch:
    inputs:
      apply_and_commit:
        description: "Apply fixes and commit to main (true/false)"
        required: false
        default: "false"
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/**"
      - "scripts/yaml_corrector*.py"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/**"
      - "scripts/yaml_corrector*.py"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: fixit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fixit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 1

      - name: Ensure tools
        shell: bash
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y jq
          python3 -V
          python3 -m pip install --upgrade pip
          pip install ruamel.yaml yamllint

      # Mobile-safe shim writer (no heredoc) so either name works
      - name: Seed corrector shim if missing
        shell: bash
        run: |
          set -e
          mkdir -p scripts self_healing_out
          if [ ! -f scripts/yaml_corrector_v2.py ] && [ -f scripts/yaml_corrector.py ]; then
            printf '%s\n' \
'#!/usr/bin/env python3' \
'import runpy, sys, pathlib' \
'me = pathlib.Path(__file__).resolve()' \
'legacy = me.with_name("yaml_corrector.py")' \
'if not legacy.exists():' \
'    print("ERROR: scripts/yaml_corrector.py not found", file=sys.stderr)' \
'    sys.exit(1)' \
'argv = ["yaml_corrector.py"]' \
'if "--apply" in sys.argv: argv.append("--apply")' \
'sys.argv = argv' \
'runpy.run_path(str(legacy), run_name="__main__")' \
            > scripts/yaml_corrector_v2.py
            chmod +x scripts/yaml_corrector_v2.py
          fi

      - name: Run YAML Corrector v2 (apply, always write a report)
        shell: bash
        run: |
          set -e
          mkdir -p self_healing_out
          STATUS_MSG=""
          if [ -f scripts/yaml_corrector_v2.py ]; then
            if ! python3 scripts/yaml_corrector_v2.py --apply; then
              STATUS_MSG="YAML Corrector v2 failed to execute"
            fi
          elif [ -f scripts/yaml_corrector.py ]; then
            if ! python3 scripts/yaml_corrector.py --apply; then
              STATUS_MSG="YAML Corrector (legacy) failed to execute"
            fi
          else
            STATUS_MSG="YAML Corrector missing (no scripts/yaml_corrector_v2.py or scripts/yaml_corrector.py)"
          fi

          # Always ensure a readable report exists (MD + JSON)
          if [ -n "$STATUS_MSG" ]; then
            echo "# YAML Corrector Result" > self_healing_out/YAML_CORRECTOR_REPORT.md
            echo "" >> self_healing_out/YAML_CORRECTOR_REPORT.md
            echo "- Status: ❌ $STATUS_MSG" >> self_healing_out/YAML_CORRECTOR_REPORT.md
            echo '{}' > self_healing_out/YAML_CORRECTOR_REPORT.json
          else
            # If script ran but generated nothing, create a minimal success note
            [ -f self_healing_out/YAML_CORRECTOR_REPORT.md ] || {
              echo "# YAML Corrector Result" > self_healing_out/YAML_CORRECTOR_REPORT.md
              echo "" >> self_healing_out/YAML_CORRECTOR_REPORT.md
              echo "- Status: ✅ Completed (report file was not generated by script; creating minimal placeholder)" >> self_healing_out/YAML_CORRECTOR_REPORT.md
            }
            [ -f self_healing_out/YAML_CORRECTOR_REPORT.json ] || echo '{}' > self_healing_out/YAML_CORRECTOR_REPORT.json
          fi

      - name: Validate workflows (yamllint)
        continue-on-error: true
        shell: bash
        run: |
          set -e
          yamllint -f parsable .github/workflows || true

      # Ensure artifact always exists, even if earlier steps failed
      - name: Ensure artifact files exist (always)
        if: always()
        shell: bash
        run: |
          set -e
          mkdir -p self_healing_out
          [ -f self_healing_out/YAML_CORRECTOR_REPORT.md ] || echo "# YAML Corrector Result\n\n(no report generated — prior steps likely failed early)" > self_healing_out/YAML_CORRECTOR_REPORT.md
          [ -f self_healing_out/YAML_CORRECTOR_REPORT.json ] || echo '{}' > self_healing_out/YAML_CORRECTOR_REPORT.json

      - name: Upload Fix-It Report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: universal_fixit_bundle
          path: self_healing_out/YAML_CORRECTOR_REPORT.*
          if-no-files-found: warn

      - name: Commit normalized workflows (optional)
        if: ${{ github.event.inputs.apply_and_commit == 'true' && github.event_name == 'workflow_dispatch' }}
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          set -e
          git config user.name "fixit-bot"
          git config user.email "bot@stegverse.local"
          git add .github/workflows/*.yml .github/workflows/*.yaml || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "fixit: normalize workflows via Universal Fix-It"
          git push origin HEAD:main || true
