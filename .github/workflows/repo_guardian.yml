name: Repo Guardian (simple auto-patch + PR)
on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  guardian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Run patches (Python, no awk/sed)
        id: patch
        run: |
          set -e
          python3 - <<'PY'
import os, re, json, subprocess, pathlib, sys
repo = pathlib.Path(".")
changed = False
report = []

# 1) Neutralize "if: ${{ secrets.* }}" in workflows
for wf in list(repo.glob(".github/workflows/*.yml")) + list(repo.glob(".github/workflows/*.yaml")):
    t = wf.read_text(encoding="utf-8")
    def repl(m):
        prefix = m.group(1)
        return f"{prefix}# TODO(auto): secrets-guard disabled to avoid parser error\n{prefix}# {m.group(0).strip()}\n{prefix}if: ${{ false }}\n"
    t2 = re.sub(r"^([ \t]*)if:\s*\$\{\{\s*secrets\.[^\}]+\}\}\s*$", repl, t, flags=re.MULTILINE)
    if t2 != t:
        wf.write_text(t2, encoding="utf-8")
        report.append(f"Neutralized secrets-if in {wf}")
        changed = True

# 2) Fix known malformed GAPS write line if present
p = pathlib.Path("scripts/collect_self_healing.py")
if p.exists():
    tt = p.read_text(encoding="utf-8")
    tt2 = tt.replace('json.dumps(manifest "gaps"]', 'json.dumps(manifest["gaps"]')
    if tt2 != tt:
        p.write_text(tt2, encoding="utf-8")
        report.append("Patched collect_self_healing.py GAPS line")
        changed = True

print(json.dumps({"changed": changed, "report": report}))
PY
          echo "changed=$(cat <<JSON
          $(git status --porcelain | wc -l | awk '{print ($1>0)?"true":"false"}')
JSON
          )" >> $GITHUB_OUTPUT

      - name: Create branch + commit (if changed)
        if: ${{ steps.patch.outputs.changed == 'true' }}
        run: |
          git config user.name "repo-guardian-bot"
          git config user.email "guardian@stegverse.local"
          BR="guardian/fixes-${GITHUB_RUN_ID}"
          git checkout -b "$BR"
          git add -A
          git commit -m "Repo Guardian: neutralize secrets-if, patch collector"
          git push origin "$BR"
          echo "branch=$BR" >> $GITHUB_OUTPUT

      - name: Open PR (if changed)
        if: ${{ steps.patch.outputs.changed == 'true' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TITLE="Repo Guardian: hygiene"
          BODY="Automated patches to allow workflows to parse and run."
          BRANCH="$(echo ${{ steps.patch.outputs.branch }})"
          DATA=$(python3 - <<'PY'
import json, os
print(json.dumps({"title": os.environ["TITLE"], "head": os.environ["BRANCH"], "base": "main", "body": os.environ["BODY"], "maintainer_can_modify": True}))
PY
)
          curl -sS -X POST \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -d "$DATA" \
            "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pulls" >/dev/null
