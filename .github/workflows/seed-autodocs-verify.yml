name: Seed AutoDocs Verify

on:
  workflow_dispatch: {}

permissions:
  contents: write
  workflows: write
  
jobs:
  seed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Write autodocs-verify workflow
        run: |
          set -euo pipefail
          mkdir -p .github/workflows
          cat > .github/workflows/autodocs-verify.yml <<'YML'
          name: AutoDocs Verify & Commit
          on:
            workflow_dispatch: {}
            push:
              branches: [ "main" ]
              paths:
                - ".github/workflows/**"
                - "scripts/autodocs_generate.py"
                - ".github/taskops/ledger.jsonl"

          permissions:
            contents: write
            actions: read

          jobs:
            autodocs:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v4
                  with:
                    fetch-depth: 0

                - name: Setup Python
                  uses: actions/setup-python@v5
                  with:
                    python-version: "3.11"

                - name: Run AutoDocs generator
                  run: |
                    set -euo pipefail
                    mkdir -p .github/docs/logs
                    LOG=.github/docs/logs/autodocs_run_$(date +%s).log
                    echo "[INFO] Starting autodocs_generate.py" | tee -a "$LOG"
                    if [ -f scripts/autodocs_generate.py ]; then
                      python scripts/autodocs_generate.py | tee -a "$LOG"
                    else
                      echo "[ERROR] Missing scripts/autodocs_generate.py" | tee -a "$LOG"
                      exit 1
                    fi

                - name: Verify docs output
                  run: |
                    set -euo pipefail
                    want=".github/docs/README-HCB-AUTOMATION.md"
                    if [ ! -f "$want" ]; then
                      echo "::error title=Missing output file::$want not found"
                      echo "Contents of .github/docs:"
                      ls -lah .github/docs || true
                      exit 1
                    fi
                    echo "✅ Found generated docs:"
                    ls -lah .github/docs

                - name: Commit & push if updated
                  env:
                    GIT_AUTHOR_NAME:  StegVerse Bot
                    GIT_AUTHOR_EMAIL: bot@stegverse.org
                    GIT_COMMITTER_NAME:  StegVerse Bot
                    GIT_COMMITTER_EMAIL: bot@stegverse.org
                  run: |
                    set -euo pipefail
                    git add .github/docs || true
                    if ! git diff --cached --quiet; then
                      git commit -m "docs: update autodocs outputs"
                      git push origin HEAD:main
                    else
                      echo "No new docs to commit."
                    fi
          YML

      - name: Commit workflow
        env:
          GIT_AUTHOR_NAME:  StegVerse Bot
          GIT_AUTHOR_EMAIL: bot@stegverse.org
          GIT_COMMITTER_NAME:  StegVerse Bot
          GIT_COMMITTER_EMAIL: bot@stegverse.org
        run: |
          set -euo pipefail
          git add .github/workflows/autodocs-verify.yml
          if ! git diff --cached --quiet; then
            git commit -m "ci: add autodocs-verify workflow"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

      - name: Trigger the new workflow (best effort)
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: "autodocs-verify.yml",
                ref: context.ref.replace("refs/heads/","") || "main"
              })
              core.info("✅ Dispatched autodocs-verify.yml")
            } catch (e) {
              core.warning(`Could not dispatch autodocs-verify.yml: ${e.message}`)
            }
