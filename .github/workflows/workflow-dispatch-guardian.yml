name: Workflow Dispatch Guardian

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/**"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install PyYAML
        run: python -m pip install --upgrade pyyaml

      - name: Ensure workflow_dispatch on all workflows
        run: |
          python - <<'PY'
          import pathlib, yaml, sys, subprocess

          wf_dir = pathlib.Path(".github/workflows")
          changed = []
          def to_map(v):
              if v is None: return {}
              if isinstance(v, dict): return v
              if isinstance(v, list):
                  m = {}
                  for x in v:
                      if isinstance(x, str): m[x] = {}
                  return m
              if isinstance(v, str): return {v:{}}
              return {}

          def is_reusable_only(m):
              if not m: return False
              keys = list(m.keys())
              return len(keys)==1 and keys[0]=="workflow_call"

          for p in wf_dir.glob("*.y*ml"):
              data = yaml.safe_load(p.read_text(encoding="utf-8"))
              if not isinstance(data, dict): continue
              on_map = to_map(data.get("on"))
              if is_reusable_only(on_map):  # skip pure reusable
                  continue
              if "workflow_dispatch" not in on_map:
                  on_map["workflow_dispatch"] = {}
                  data["on"] = on_map
                  p.write_text(yaml.safe_dump(data, sort_keys=False, allow_unicode=True), encoding="utf-8")
                  changed.append(str(p))

          if changed:
              print("Added workflow_dispatch to:", changed)
              subprocess.check_call(["git","config","user.name","StegVerse Bot"])
              subprocess.check_call(["git","config","user.email","bot@stegverse.org"])
              subprocess.check_call(["git","add",".github/workflows"])
              subprocess.check_call(["git","commit","-m","chore(guardian): ensure workflow_dispatch on workflows"])
              subprocess.check_call(["git","push","origin","HEAD:main"])
          else:
              print("All workflows already have workflow_dispatch (or are reusable-only).")
          PY
